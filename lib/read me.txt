This is a Cargo Delivery&Search System, by student Lu Sun, id: w20082256

this assessment is about a cargo system with 2 different models/Schemas:
         	cargo model , and the provider model, 
	with relationships between them£ºCargo.providerID->provider.ObjectID;

using MongoDB as the database;  DB name: Cargo; 	
3-collections in the db: Cargo,  provider,  user;

use mocha test,  in  test/cargo-test.js
	(because this test must connect my local database first, 
	so seems like you cant test this test structure by yourself,
	but you can take a look at my cargo-test file in test folder,
	i can ensure you that this test works)

including many functions for get, post, put, delete.
Fuzzy search	(¡Ì)	--get/cargoContains/:name    		 	get all cargos whose name contains certain name;
relevance search	(¡Ì)	--get/cargoCompany/:id			get the certain cargo's company and reputation because I linked 								the "providerID" to 	provider model's ObjectID, so can get that;

Authentication	(¡Ì)	--many functions contains Authentication;	
								only those provider whose providerType is "admin" can get 										access to some the functions; you can test all these functions 								which contains :providerName ; 

How to get the idea and the solutions of these additional functions : 

	For Fuzzy search: I search the mongoose API, and get the regulation expression of find( ) function, and applied that to my function;

	For relevance search, I linked the cargo schema with my provider schema, and can find a certain cargo's 
information of that cargo's company name and its reputation level, write a static function: 
findCompanyAndReputationById(   ) in my cargo model, and alse, search the mongoose API for specifications.

	For Authentication, I  use providerType, only those whose providerType is admin can get access to some of the functions.



  1.  For cargo model
	1.1    get/cargoAll/:providerName		only those provider whose providerType is "admin" can get all cargos; otherwise return a massage of authentication not enough	(Authentication);

	1.2    get/cargoCompany/:id			(Relevance search), company and reputation are two attributes of provider  (NOT Cargo model !!) but by link these two models, we can search a certain cargo's company and its ruputation; (see that the database)

	1.3    get/cargoContains/:name/:providerName	(Authentication, Fuzzy search)    if the provider's providerType is "admin" can search;  this function returns all the cargos which contains :name(like i search beef, it can return me beef, beef-tongue, beef-fillet, etc.)

	1.4    get/cargoName/:name/providerName	(Authentication)	admin can search all cargos whose name is you asked;  others cant do;

	1.5    get/cargoId/:id/:providerName		(Authentication)	admin can search a certain cargo by its ID, or the provider of that cargo can search his own one by himself;

	1.6    get/cargoTotalCostByName/:name	compute the total price of one kind of cargo;
	1.7    get/cargoCertainCost/:id		compute a certain cargo's price by its ID;

	1.8    post/cargo/:providerName		(Authentication)	admin can add a cargo;
	
	1.9    put/cargoPriceChange/:name/:providerName	(Authentication)	admin can change all one kind of cargo's price;
	1.10  put/cargoCertainPrice/:id/:providerName		(Authentication)	admin can change one certain cargo's price by ID

	1.11  put/cargoCertainAmount/:id/:providerName		(Authentication)	admin can change one certain cargo's amount by its ID
	
	1.12  put/cargoCertainProvider/:id/:providerName	(Authenticaiton)	admin can change one certain cargo's provider; 

	1.13  delete/cargo/:id/:providerName		(Authentication)	admin can delete one certain cargo by its ID

  2. for the provider model:	(it doesn't have authtication, because only admin can actually access to this model in my Design);

	2.1    get/provider/providerAll		get all the provider;

	2.2    get/providerCompanyContains/:company	(Fuzzy search)	get all companies contain certain string in case you cant remember the company's full name;

	2.3    get/providerName/:name		get providers by its name;

	2.4    get/provider/:id			get a certain provider by its ID;

	2.5    post/provider				add a provider;

	2.6    put/providerCompanyChange/:id		change one certain provider's company;

	2.7    put/providerReputationChange/:id	change one certain provider's reputation;

	

	For ALL the functions, a correct search returns a Correct response;
			   
			   an invalid search can return a certain masseage of Error;


For thos functions which contain Authentication, if you dont have the authentication, it will return a message like     "your authentication is not enough,  you cannot XXXXXXXX !"


Reference:
	1. for that relevance search: 
		https://segmentfault.com/a/1190000009690117

	2. for the fuzzy search: 		
		mongoose  API:         https://mongoosejs.com/docs/api.html
		mongoDB  Api:	  http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#find

	

























